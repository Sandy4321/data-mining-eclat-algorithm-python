# -*- coding: utf-8 -*-
"""
Created on Sat Apr 21 21:39:10 2018

@author: Aydin Rzayev
"""
" Java code used to generate the dataset is attached to this homework's zip "

" Generated the Dataset of 600 lines with randomly chosen number of items from 1 to 20"
" Id's of items vary from 1 to 30, which means we have 30 different products"

" So, now I take 2 frequent itemsets found using Eclat algorithm and find their measures "
 
""" 
17 23 : [1, 15, 34, 38, 47, 49, 58, 60, 68, 70, 72, 95, 99, 119, 125, 148,
         159, 160, 162, 178, 183, 193, 210, 217, 229, 230, 232, 259, 263,
         265, 270, 272, 278, 296, 302, 337, 369, 384, 401, 403, 409, 440,
         444, 445, 446, 454, 458, 473, 477, 501, 517, 523, 531, 541, 544,
         555, 562, 572, 594]
 
17 25 : [28, 47, 53, 68, 69, 114, 115, 119, 124, 135, 143, 148, 160, 164,
         183, 191, 204, 226, 229, 263, 278, 284, 291, 301, 314, 327, 338,
         354, 364, 367, 379, 392, 398, 401, 409, 433, 440, 445, 446, 459,
         461, 477, 487, 500, 501, 521, 522, 541, 555, 568, 571, 575, 584]
"""


" SUPPORT "

NumberOfSets = 600;

support_17 = len([1, 1, 2, 2, 4, 5, 15, 16, 16, 21, 23, 26, 27, 28, 31, 33, 34, 38, 47, 49, 53, 54, 54, 55, 55, 58, 60, 68, 69, 70, 72, 76, 78, 91, 95, 99, 105, 107, 112, 114, 115, 119, 124, 125, 129, 132, 132, 134, 135, 143, 146, 148, 155, 159, 160, 162, 163, 163, 164, 165, 178, 183, 191, 193, 204, 205, 205, 207, 210, 217, 218, 226, 226, 229, 230, 232, 245, 253, 259, 259, 262, 263, 263, 263, 265, 267, 268, 270, 272, 278, 281, 281, 281, 284, 285, 291, 296, 301, 302, 303, 303, 308, 314, 317, 317, 325, 327, 328, 330, 331, 333, 337, 338, 339, 354, 357, 364, 367, 369, 369, 370, 371, 373, 374, 378, 379, 384, 389, 392, 392, 396, 398, 398, 401, 403, 403, 407, 408, 408, 408, 409, 422, 433, 435, 440, 444, 445, 446, 454, 458, 459, 459, 460, 461, 464, 473, 477, 478, 478, 487, 490, 493, 498, 500, 501, 505, 508, 517, 521, 522, 523, 529, 531, 541, 541, 544, 554, 555, 559, 562, 568, 571, 571, 572, 575, 583, 583, 584, 594])
support_23 = len([1, 3, 11, 14, 14, 15, 15, 17, 20, 24, 29, 34, 35, 38, 43, 45, 47, 49, 50, 58, 58, 58, 58, 60, 61, 63, 67, 68, 70, 72, 77, 82, 83, 84, 86, 94, 94, 95, 98, 98, 98, 99, 102, 103, 106, 117, 119, 125, 133, 133, 139, 142, 142, 145, 145, 148, 151, 153, 154, 156, 159, 160, 162, 166, 167, 169, 170, 171, 175, 178, 183, 184, 186, 190, 190, 192, 193, 194, 203, 210, 217, 220, 221, 223, 225, 227, 229, 230, 232, 233, 237, 239, 243, 256, 256, 259, 260, 263, 263, 265, 270, 272, 277, 278, 279, 294, 296, 297, 299, 300, 302, 305, 306, 311, 322, 322, 322, 329, 332, 337, 340, 346, 348, 353, 355, 356, 368, 369, 384, 385, 385, 385, 386, 388, 388, 390, 393, 395, 399, 401, 403, 409, 410, 411, 411, 413, 416, 417, 417, 425, 430, 431, 432, 432, 440, 440, 441, 444, 445, 446, 447, 447, 450, 454, 456, 458, 462, 466, 469, 473, 477, 482, 486, 494, 501, 517, 517, 519, 519, 523, 524, 531, 533, 537, 538, 541, 544, 548, 549, 552, 553, 553, 555, 555, 557, 561, 562, 564, 565, 572, 573, 574, 574, 576, 578, 578, 578, 579, 588, 589, 590, 592, 594])
support_25 = len([6, 8, 8, 13, 14, 19, 28, 40, 40, 41, 42, 42, 43, 47, 53, 53, 53, 63, 68, 69, 86, 89, 90, 93, 100, 110, 113, 114, 115, 117, 119, 121, 124, 128, 135, 138, 141, 143, 145, 148, 148, 152, 157, 158, 158, 160, 164, 166, 167, 167, 168, 171, 177, 183, 191, 201, 203, 204, 209, 209, 212, 213, 216, 219, 223, 226, 228, 229, 236, 236, 237, 240, 240, 241, 243, 243, 246, 246, 247, 248, 248, 255, 263, 271, 276, 278, 280, 284, 290, 291, 295, 301, 304, 304, 307, 311, 311, 311, 314, 315, 321, 322, 323, 324, 327, 329, 335, 338, 340, 350, 351, 354, 356, 361, 362, 364, 367, 372, 377, 379, 385, 386, 392, 398, 401, 409, 409, 410, 412, 415, 417, 431, 432, 432, 433, 439, 440, 443, 445, 446, 447, 450, 456, 457, 459, 461, 463, 465, 467, 474, 477, 482, 484, 487, 495, 497, 500, 501, 504, 506, 506, 513, 519, 520, 521, 521, 521, 522, 525, 527, 527, 533, 534, 536, 541, 542, 550, 550, 552, 553, 555, 556, 564, 568, 570, 570, 571, 573, 573, 575, 575, 579, 580, 584, 588, 591, 593, 596])

itemset_17_23 = [1, 15, 34, 38, 47, 49, 58, 60, 68, 70, 72, 95, 99, 119, 125, 148,
         159, 160, 162, 178, 183, 193, 210, 217, 229, 230, 232, 259, 263,
         265, 270, 272, 278, 296, 302, 337, 369, 384, 401, 403, 409, 440,
         444, 445, 446, 454, 458, 473, 477, 501, 517, 523, 531, 541, 544,
         555, 562, 572, 594]

itemset_17_25 = [28, 47, 53, 68, 69, 114, 115, 119, 124, 135, 143, 148, 160, 164,
         183, 191, 204, 226, 229, 263, 278, 284, 291, 301, 314, 327, 338,
         354, 364, 367, 379, 392, 398, 401, 409, 433, 440, 445, 446, 459,
         461, 477, 487, 500, 501, 521, 522, 541, 555, 568,
         571, 575, 584]

support_17_23 = len(itemset_17_23)

support_17_25 = len(itemset_17_25)

print()
print()
print("These two frequent itesmsets are counted:")
print()
print()
print("Itemset of 17 and 23 :", itemset_17_23)
print()
print()
print("Itemset of 17 and 25 :", itemset_17_25)

print()
print()
print("--------  Support Measure")
print("support of 17 23 :", support_17_23)
print("support of 17 25 :", support_17_25)


" CONFIDENCE "

print()
print()
print("--------  Confidence Measure")
print("confidence of 17 23 :", (support_17_23/support_17))
print("confidence of 17 25 :", (support_17_25/support_17))


" LIFT "

print()
print()
print("--------  Lift Measure")
print("lift of 17 23 :", (support_17_23/support_17)/(support_23/NumberOfSets))
print("lift of 17 25 :", (support_17_25/support_17)/(support_25/NumberOfSets))


" LEVERAGE "

print()
print()
print("--------  Leverage Measure") 
print("leverage of 17 23 :", (support_17_23/NumberOfSets - (support_17/NumberOfSets * support_23/NumberOfSets)))
print("leverage of 17 25 :", (support_17_25/NumberOfSets - (support_17/NumberOfSets * support_25/NumberOfSets)))

 
" JACCARD "

print()
print() 
print("--------  Jaccard Measure") 
print("jaccard of 17 23 :", (support_17_23 / (support_17 + support_23 - support_17_23)))
print("jaccard of 17 25 :", (support_17_23 / (support_17 + support_25 - support_17_25)))


" CONVICTION "

print()
print()  
print("--------  Conviction Measure") 
print("conviction of 17 23 :", (1 / (((support_17 - support_17_23)/support_17)/((NumberOfSets - support_23)/NumberOfSets))))
print("conviction of 17 25 :", (1 / (((support_17 - support_17_25)/support_17)/((NumberOfSets - support_25)/NumberOfSets)))) 


" ODDS RATIO "

print()
print()  
print("--------  Odds ratio Measure") 
print("odds ratio of 17 23 :", ((support_17_23 * (NumberOfSets - (support_17 + support_23 - support_17_23))) / ((support_17 - support_17_23) * (support_23 - support_17_23))))
print("odds ratio of 17 25 :", ((support_17_25 * (NumberOfSets - (support_17 + support_25 - support_17_25))) / ((support_17 - support_17_25) * (support_25 - support_17_25)))) 



